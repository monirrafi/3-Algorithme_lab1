public void Suprimer(int cote) {
 if(cote >= taille){================================> O(1)
  for(int index = 0; index < taille-1; index++){====> O(n) O(n) + 2xO(1)
        tabTemp[index] = tabBiblio[index];==========> O(1)
  }
 }                                                               +
 for (int i = 0; i < taille-1; i++) {===============> O(n)
  if(tabBiblio[i].getCote() ==cote){================> O(1)
    tabTemp = new Ouvrage[taille - 1];==============> O(1)   2xO(n2) + 4xO(1)    = O(n2)
    for(int index = 0; index < i; index++){=========> O(n)
        tabTemp[index] = tabBiblio[index];==========> O(1)
    }
    for(int j = i; j < taille-1; j++){==============> O(n)
        tabTemp[j] = tabBiblio[j+1];================> O(1)
    }
    break;                                                      +
  }
 }  
 this.setTabBiblio(tabTemp);========================> O(1)
 this.setTaille(taille-1);==========================> O(1)   2xO(1)
}
===========================================================================
public void Suprimer(int cote) {
 for(int i=0;i<linkBiblio.size();i++){==============> O(n)
    if(linkBiblio.get(i).getCote() == cote){========> O(1)    = O(n)
        linkBiblio.remove(i);
        break;

    }
 }
}
